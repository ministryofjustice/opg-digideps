## Defines commands we can run from containers
services:
  dr-restore:
    build:
      context: ./disaster-recovery/restore
      dockerfile: Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      AWS_SESSION_TOKEN: $AWS_SESSION_TOKEN
    volumes:
      - ./disaster_recovery/restore/disaster_recovery.py:/disaster_recovery.py

  dr-backup:
    build:
      context: ./disaster-recovery/backup
      dockerfile: Dockerfile

  zap-admin:
    image: softwaresecurityproject/zap-stable
    volumes:
      - "./zap/:/zap/wrk/"
    command: bash -c "zap.sh -cmd -addonupdate -addoninstall pscanrules -addoninstall pscanrulesBeta -addoninstall pscanrulesAlpha -addoninstall ascanrules -addoninstall ascanrulesBeta -addoninstall ascanrulesAlpha; zap.sh -cmd -autorun /zap/wrk/zap-digideps-admin.yaml"

  zap-front:
    image: softwaresecurityproject/zap-stable
    volumes:
      - "./zap/:/zap/wrk/"
    command: bash -c "zap.sh -cmd -addonupdate -addoninstall pscanrules -addoninstall pscanrulesBeta -addoninstall pscanrulesAlpha -addoninstall ascanrules -addoninstall ascanrulesBeta -addoninstall ascanrulesAlpha; zap.sh -cmd -autorun /zap/wrk/zap-digideps-front.yaml"
