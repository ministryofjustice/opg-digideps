services:
    # Voter on User, used by PA area
    # http://symfony.com/doc/2.8/security/voters.html
    app.user_voter:
        class: App\Security\UserVoter
        tags:
            - { name: security.voter }
        # small performance boost
        public: false
    app.note_voter:
        class: App\Security\NoteVoter
        arguments: ["@security.access.decision_manager"]
        tags:
            - { name: security.voter }
        # small performance boost
        public: false
    app.client_contact_voter:
        class: App\Security\ClientContactVoter
        arguments: ["@security.access.decision_manager"]
        tags:
            - { name: security.voter }
        # small performance boost
        public: false
    app.document_voter:
        class: App\Security\DocumentVoter
        arguments: ["@security.access.decision_manager"]
        tags:
            - { name: security.voter }
        # small performance boost
        public: false

security:
    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ADMIN_MANAGER]
        ROLE_ADMIN_MANAGER: [ROLE_ADMIN]

        ROLE_PA: ROLE_ORG
        ROLE_PROF: ROLE_ORG

        ROLE_PA_NAMED: [ROLE_PA, ROLE_ORG_NAMED]
        ROLE_PA_ADMIN: [ROLE_PA, ROLE_ORG_ADMIN]
        ROLE_PA_TEAM_MEMBER: [ROLE_PA, ROLE_ORG_TEAM_MEMBER]

        ROLE_PROF_NAMED: [ROLE_PROF, ROLE_ORG_NAMED]
        ROLE_PROF_ADMIN: [ROLE_PROF, ROLE_ORG_ADMIN]
        ROLE_PROF_TEAM_MEMBER: [ROLE_PROF, ROLE_ORG_TEAM_MEMBER]

    password_hashers:
        # Use native password hasher, which auto-selects and migrates the best
        # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: "auto"

    providers:
        deputy:
            id: App\Service\DeputyProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/login$
            security: false

        passwordManaging:
            pattern: ^/password-managing*
            security: false

        userManaging:
            pattern: ^/user/(password-reset|activate|agree-terms-use)/*
            security: false

        manageController:
            pattern: ^/manage/*
            security: false

        error503:
            pattern: ^/error-503
            security: false

        secured_area:
            form_login:
                login_path: login
                check_path: login
            logout:
                path: /logout
                target: /
                success_handler: logout_listener
                # needed to save custom login params
                invalidate_session: false
            anonymous: ~
            switch_user: true

    access_control:
        # /admin accessible only from ADMIN, super users and AD users
        - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_AD] }
        # client settings not available to PA users
        - {
              path: ^/deputyship-details,
              roles: [ROLE_LAY_DEPUTY, ROLE_ADMIN, ROLE_AD],
          }
        - { path: ^/ad, roles: [ROLE_AD] }
        - { path: ^/pa/team/add, roles: [ROLE_ORG_NAMED, ROLE_ORG_ADMIN] }
        - { path: ^/pa/team/edit, roles: [ROLE_ORG] }
        - { path: ^/pa/, roles: [ROLE_ORG] }
        # report expenses section access for Lay and PA
        - { path: ^/report/\d+/pa-fee-expense, roles: [ROLE_ORG] }
        - { path: ^/report/\d+/deputy-expenses, roles: [ROLE_LAY_DEPUTY] }

        # open URLs
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login-ad, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/manage, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/feedback, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/terms, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/privacy, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/cookies, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/accessibility, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - {
              path: ^/behat/frontend/reset-fixtures,
              roles: IS_AUTHENTICATED_ANONYMOUSLY,
          }
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # all the rest needs authentication
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
