name: "[Scheduled] Cleanup PR Workspaces"

on:
  schedule:
    # 9pm every day except Sundays
    - cron: "0 21 * * 0-6"

permissions:
  id-token: write
  contents: read
  security-events: none
  pull-requests: none
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

jobs:
  terraform_environment_cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@73bfe6f3ea05ffbc3dd278fe29c113ec1e7dcefc # v3.1.1
        with:
          terraform_directory: terraform/environment

      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - name: install workspace manager
        run: |
          wget https://github.com/ministryofjustice/opg-terraform-workspace-manager/releases/download/v0.3.3/opg-terraform-workspace-manager_Linux_x86_64.tar.gz -O $HOME/terraform-workspace-manager.tar.gz
          sudo tar -xvf $HOME/terraform-workspace-manager.tar.gz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/terraform-workspace-manager

      - name: configure AWS credentials for workspace manager
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::248804316466:role/digideps-gh-actions-workspace-cleanup
          role-session-name: github-actions-terraform
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: Get ephemeral workspaces to clean up
        id: get_workspaces
        run: |
          WORKSPACES=$(terraform-workspace-manager \
            -protected-workspaces=true \
            -aws-account-id=248804316466 \
            -aws-iam-role=digideps-ci \
            -assume-role=false)
          echo "workspaces=$WORKSPACES" >> $GITHUB_OUTPUT
        working-directory: terraform/environment

      - name: install python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # 5.4.0
        with:
          python-version: "3.10"
          cache: "pip"

      - uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_ALLOW_LIST_REPOSITORY }}

      - name: configure AWS credentials for terraform
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::631181914621:role/oidc-digideps-development
          role-session-name: github-actions-terraform
          role-duration-seconds: 7400
          aws-region: eu-west-1

      - name: terraform init
        run: terraform init -input=false
        working-directory: terraform/environment

      - name: Clean up ephemeral environments
        env:
          WC_WORKSPACES: ${{ steps.get_workspaces.outputs.workspaces }}
        run: |
          unset TF_WORKSPACE
          ./scripts/workspace_cleanup.sh ${WC_WORKSPACES}
        working-directory: terraform/environment

      - name: clean up old task definitions
        env:
          REGION: eu-west-1
        run: |
          pip install -r requirements.txt
          python cleanup_task_definitions.py
        working-directory: scripts/pipeline/cleanup_task_definitions

      - name: Unset AWS variables
        if: always()
        run: |
          echo "AWS_SECRET_ACCESS_KEY=" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=" >> $GITHUB_ENV

  slack_notify_failure:
    name: notify of failure
    uses: ./.github/workflows/_slack-notification.yml
    if: ${{ failure() }}
    needs:
      - terraform_environment_cleanup
    with:
      success: no
      branch: main
      account: 454262938596
      scheduled_task: "Environment Cleanup"
