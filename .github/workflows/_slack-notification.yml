name: "[Slack] Send slack notification"

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      success:
        description: "Job status"
        required: true
        type: string
      branch:
        description: "Branch of the workflow"
        required: true
        type: string
      account:
        description: "Account id to use"
        required: true
        type: string
      scheduled_task:
        description: "Name of scheduled task if notification comes from a scheduled task"
        required: false
        default: ""
        type: string

jobs:
  send-slack-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@7cdaf2fbc075e6f3b9ca94cfd6cec5adc8a75622 # pin@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@e49c9972c28e00c16bb2eb7bea9f63a625cb86c1 # pin@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::${{ inputs.account }}:role/digideps-ci
          role-duration-seconds: 1800
          role-session-name: OPGDigidepsSlackNotify

      - name: install python
        uses: actions/setup-python@5f2af211d616f86005883b44826180b21abb4060 # pin@v4.2.0
        with:
          python-version: "3.11"
          cache: "pip"

      - name: install requirements
        run: pip install -r lambdas/functions/slack_lambda/requirements.txt

      - name: Notify Slack
        env:
          BRANCH: ${{ inputs.branch }}
          SUCCESS: ${{ inputs.success }}
          SCHEDULED_TASK: ${{ inputs.scheduled_task }}
        run: |
          python ci_slack.py \
          --success "${SUCCESS}" \
          --commit_message "$(git log -1 --pretty=%B)" \
          --branch "${BRANCH}" \
          --scheduled_task "${SCHEDULED_TASK}"
        working-directory: lambdas/functions/slack_lambda/app
