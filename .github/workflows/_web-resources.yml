name: "[Docker] Build web resources"

defaults:
  run:
    shell: bash

on:
  workflow_call:

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f095bcc56b7c2baf48f3ac70d6d6782f4f553222 # pin@v3
      - name: create nvmrc file
        run: grep "FROM node:" Dockerfile | awk -F' ' '{print $2}' | sed 's/^node:\(.*\)-.*/\1/' > .nvmrc
        working-directory: client/docker/resources
      - uses: actions/setup-node@869f4dd0c7f320ae834c2724d92a364de3893c24 # pin@v3.6.0
        with:
          node-version-file: "client/docker/resources/.nvmrc"
      - name: cache node modules
        id: cache-npm
        uses: actions/cache@04f198bf0b2a39f7230a4304bf07747a0bddf146 # pin@v3.0.8
        env:
          cache-name: cache-node-modules
        with:
          path: client/resources/public
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Check if directory exists and has content
        id: check-directory
        run: |
          directory="client/resources/public"
          if [ -d "$directory" ] && [ "$(ls -A "$directory")" ]; then
            echo "directory_exists=$(echo true)" >> $GITHUB_OUTPUT
          else
            echo "directory_exists=$(echo false)" >> $GITHUB_OUTPUT
          fi
      - name: Build assets
        if: steps.check-directory.outputs.directory_exists == 'false'
        run: |
          # Install NPM dependencies
          npm install
          npm run lint
          npm audit --production
          #Build assets
          NODE_ENV=production npm run build
        working-directory: client/resources
      - name: archive dist
        uses: actions/upload-artifact@65d862660abb392b8c4a3d1195a2108db131dd05 # pin@v3.1.0
        with:
          name: web-distribution
          path: client/resources/public
