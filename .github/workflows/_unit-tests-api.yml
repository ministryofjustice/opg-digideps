name: "[Tests] API Unit Tests"

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      selection:
        description: "api tests selection to run"
        required: true
        type: string
      branch_name:
        description: "Name of the branch doing the build"
        required: true
        type: string
jobs:
  api-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v3

      - name: set up docker buildx
        uses: docker/setup-buildx-action@edfb0fe6204400c56fbfd3feba3fe9ad1adfa345

      - name: cache docker layers
        id: cache-docker
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # pin@v3.0.8
        with:
          path: /tmp/.buildx-cache
          key: api-unit-tests-${{ inputs.branch_name }}-${{ github.sha }}
          restore-keys: |
            api-unit-tests-${{ inputs.branch_name }}
            api-unit-tests-main

      - name: build docker images
        run: |
          docker buildx build \
          -f api/docker/app/Dockerfile \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new \
          --tag api-unit-tests:latest \
          --target ci-tests \
          --output type=docker .

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: setup local docker resources for unit tests
        id: unit-test-setup
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml up -d localstack postgres redis-api
          while [ $(docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml exec -T localstack awslocal secretsmanager list-secrets | grep synchronisation-jwt-token | wc -l) -lt 1 ]; do sleep 1; done
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml run --rm api-unit-tests ls -alt
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml run --rm api-unit-tests sh scripts/reset_db_structure_local.sh

      - name: run api unit tests
        env:
          SELECTION: ${{ inputs.selection }}
        id: unit-tests
        run: |
          APP_ENV=test APP_DEBUG=0 docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml up -d api-unit-tests
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml exec -T api-unit-tests chmod -R 777 var
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml exec -T api-unit-tests sh scripts/api_unit_test.sh ${SELECTION}
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml exec -T api-unit-tests chmod -R 777 tests/coverage
          docker cp "api-unit-tests:/var/www/tests/coverage/api-unit-tests.xml" "./api-unit-tests-${SELECTION}.xml"
          docker-compose -f docker-compose.yml -f docker-compose.unit-tests-api.yml down

      - name: archive test results
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # pin@v3.1.0
        with:
          name: api-unit-tests-${{ inputs.selection }}
          path: api-unit-tests-${{ inputs.selection }}.xml
