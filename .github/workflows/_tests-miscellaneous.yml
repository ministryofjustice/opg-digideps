name: "[Tests] Miscellaneous Unit Tests"

defaults:
  run:
    shell: bash

on:
  workflow_call:

jobs:
  miscellaneous-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2 # pin@v3

      - uses: actions/setup-python@8039c45ed9a312fba91f3399cd0605ba2ebfe93c
        with:
          python-version: "3.11"

      - name: install python requirements
        id: python-requirements
        run: pip3 install -r requirements.txt
        working-directory: lambdas/functions/block_ips_lambda

      - name: run unit tests for block ips
        id: unit-tests-block-ips
        run: python -m unittest tests/*_tests.py
        working-directory: lambdas/functions/block_ips_lambda

      - name: run unit tests for anonymisation
        id: unit-tests-anonymisation
        run: go test ./...
        working-directory: orchestration/anonymisation

      - name: run additional composer package checks on client
        id: package-checks-client
        run: python audit-composer-packages.py client.json
        working-directory: scripts/package-audit

      - name: run additional composer package checks on api
        id: package-checks-api
        run: python audit-composer-packages.py api.json
        working-directory: scripts/package-audit

      - name: run linting on all our Dockerfiles
        id: hadolint
        run: |
          find . -type f -name "*Dockerfile*" -exec sh -c 'for file; \
          do echo "Processing $file"; \
          docker run --rm -i -v ./hadolint.yaml:/.config/hadolint.yaml \
          hadolint/hadolint < "$file"; \
          done' sh {} +

          if [ $? -ne 0 ]; then
              echo "==== Dockerfile Linting Failure. Errors found ===="
              exit 1
          else
              echo "==== Dockerfile Linting Success. No errors ===="
              exit 0
          fi
