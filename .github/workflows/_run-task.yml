on:
  workflow_call:
    secrets:
      ssh_private_key:
        required: true
    inputs:
      workspace:
        description: "Workspace"
        required: true
        type: string
      account_name:
        required: false
        default: "development"
        type: string
        description: "Account to get credentials for"
      task_name:
        description: "Name of the task to run"
        required: true
        type: string
      timeout:
        description: "Timeout for the task"
        required: false
        default: 120
        type: string
      override:
        description: "Override for the task"
        required: false
        default: ""
        type: string
env:
  HELPER_VERSION: "0.8.0"
jobs:
  run-task:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2 # pin@v3

      - uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06 # pin@v1.0.3

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.1.1
        with:
          terraform_directory: terraform/environment

      - uses: hashicorp/setup-terraform@7d2407faba0d9514aa95dc515182ee36200712a7 # pin@v2.0.0
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - name: cache ecs-helper
        id: cache-ecs-helper
        uses: actions/cache@v3
        with:
          path: ecs-helper
          key: ecs-helper-${{ env.HELPER_VERSION }}

      - name: get ecs-helper
        if: steps.cache-ecs-helper.outputs.cache-hit != 'true'
        run: |
          wget "https://github.com/ministryofjustice/opg-ecs-helper/releases/download/v$HELPER_VERSION/opg-ecs-helper_Linux_x86_64.tar.gz"
          mkdir ecs-helper
          tar -xvf opg-ecs-helper_Linux_x86_64.tar.gz -C ecs-helper
          chmod +x ecs-helper/ecs-runner

      - uses: webfactory/ssh-agent@dc588b651fe13675774614f8e6a936a468676387 # pin@v0.5.4
        with:
          ssh-private-key: ${{ secrets.ssh_private_key }}

      - name: configure OIDC AWS credentials for terraform
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        with:
          role-to-assume: "arn:aws:iam::631181914621:role/oidc-digideps-${{ inputs.account_name }}"
          role-session-name: github-actions-terraform-run-task
          role-duration-seconds: 3600
          aws-region: eu-west-1

      - name: terraform init
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: terraform init
        working-directory: terraform/environment

      - name: terraform output
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          echo $TF_WORKSPACE
          terraform output -json > terraform.output.json
        working-directory: terraform/environment

      - name: run task
        env:
          OVERRIDE: ${{ inputs.override }}
          TASK_NAME: ${{ inputs.task_name }}
          TIMEOUT: ${{ inputs.timeout }}
        run: |
          echo ${TASK_NAME}
          echo ${TIMEOUT}
          echo ${OVERRIDE}
          if [ "${OVERRIDE}" == "" ]
          then
            ../../ecs-helper/ecs-runner -task ${TASK_NAME} -timeout ${TIMEOUT}
          else
            ../../ecs-helper/ecs-runner -task ${TASK_NAME} -timeout ${TIMEOUT} -override ${OVERRIDE}
          fi
        working-directory: terraform/environment

      - name: Unset AWS variables
        if: always()
        run: |
          echo "AWS_SECRET_ACCESS_KEY=" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=" >> $GITHUB_ENV
