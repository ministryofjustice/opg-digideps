on:
  workflow_call:
    inputs:
      workspace:
        description: "Workspace"
        required: true
        type: string
      task_name:
        description: "Name of the task to run"
        required: true
        type: string
      timeout:
        description: "Timeout for the task"
        required: false
        default: 120
        type: string
      override:
        description: "Override for the task"
        required: false
        default: ""
        type: string
jobs:
  run-task:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f095bcc56b7c2baf48f3ac70d6d6782f4f553222 # pin@v3

      - uses: unfor19/install-aws-cli-action@457b7980b125044247e455d87b9a26fc2299b787 # pin@v1.0.3

      - uses: hashicorp/setup-terraform@1fdd4cd311e198fb45135f3a68294d3df2d5bda8 # pin@v2.0.0
        with:
          terraform_version: 1.2.4
          terraform_wrapper: false

      - name: configure AWS credentials for terraform
        uses: aws-actions/configure-aws-credentials@8815b6557cafe082774ec49c58d911e53c98849d # pin@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-duration-seconds: 1800
          role-session-name: OPGDigidepsRunTaskGithubAction

      - uses: webfactory/ssh-agent@fc49353b67b2b7c1e0e6a600572d01a69f2672dd # pin@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_ALLOW_LIST_REPOSITORY }}

      - name: terraform init
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: terraform init
        working-directory: environment

      - name: terraform output
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          echo $TF_WORKSPACE
          terraform output -json > terraform.output.json
        working-directory: environment

      - name: cache ecs-helper
        id: cache-ecs-helper
        uses: actions/cache@v3
        with:
          path: ecs-helper
          key: ecs-helper-0.7.0

      - name: get ecs-helper
        if: steps.cache-ecs-helper.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/ministryofjustice/opg-ecs-helper/releases/download/v0.7.0/opg-ecs-helper_Linux_x86_64.tar.gz
          tar -xvf opg-ecs-helper_Linux_x86_64.tar.gz
          chmod +x ecs-helper/ecs-runner

      - name: run task
        env:
          OVERRIDE: ${{ inputs.override }}
          TASK_NAME: ${{ inputs.task_name }}
          TIMEOUT: ${{ inputs.timeout }}
        run: |
          echo ${TASK_NAME}
          echo ${TIMEOUT}
          echo ${OVERRIDE}
          if [ "${OVERRIDE}" == "" ]
          then
            /home//ecs-helper/ecs-runner -task ${TASK_NAME} -timeout ${TIMEOUT}
          else
            /home/ecs-helper/ecs-runner -task ${TASK_NAME} -timeout ${TIMEOUT} -override ${OVERRIDE}
          fi
        working-directory: environment
