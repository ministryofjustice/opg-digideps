on:
  workflow_call:
    inputs:
      workspace:
        description: "Workspace"
        required: true
        type: string
      account_name:
        required: false
        default: "development"
        type: string
        description: "Account to get credentials for"
      task_name:
        description: "Name of the task to run"
        required: true
        type: string
      timeout:
        description: "Timeout for the task"
        required: false
        default: 120
        type: string
      override:
        description: "Override for the task"
        required: false
        default: ""
        type: string
env:
  HELPER_VERSION: "0.8.0"
jobs:
  run-task:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v3

      - uses: unfor19/install-aws-cli-action@46282f151073130d90347412d9c4ef0640177f22 # pin@v1.0.3

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.0.6
        with:
          terraform_directory: terraform/environment

      - uses: hashicorp/setup-terraform@1b93182764c8332e7679b2393cb307cbe7baf9dc # pin@v2.0.0
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - name: configure OIDC AWS credentials for terraform
        uses: aws-actions/configure-aws-credentials@12e3392609eaaceb7ae6191b3f54bbcb85b5002b
        with:
          role-to-assume: "arn:aws:iam::631181914621:role/oidc-digideps-${{ inputs.account_name }}"
          role-session-name: github-actions-terraform-run-task
          role-duration-seconds: 3600
          aws-region: eu-west-1

      - uses: webfactory/ssh-agent@fd34b8dee206fe74b288a5e61bc95fba2f1911eb # pin@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_ALLOW_LIST_REPOSITORY }}

      - name: terraform init
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: terraform init
        working-directory: terraform/environment

      - name: terraform output
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          echo $TF_WORKSPACE
          terraform output -json > terraform.output.json
        working-directory: terraform/environment

      - name: cache ecs-helper
        id: cache-ecs-helper
        uses: actions/cache@v3
        with:
          path: ecs-helper
          key: ecs-helper-${{ env.HELPER_VERSION }}

      - name: get ecs-helper
        if: steps.cache-ecs-helper.outputs.cache-hit != 'true'
        run: |
          wget "https://github.com/ministryofjustice/opg-ecs-helper/releases/download/v$HELPER_VERSION/opg-ecs-helper_Linux_x86_64.tar.gz"
          mkdir ecs-helper
          tar -xvf opg-ecs-helper_Linux_x86_64.tar.gz -C ecs-helper
          chmod +x ecs-helper/ecs-runner

      - name: run task
        env:
          OVERRIDE: ${{ inputs.override }}
          TASK_NAME: ${{ inputs.task_name }}
          TIMEOUT: ${{ inputs.timeout }}
        run: |
          echo ${TASK_NAME}
          echo ${TIMEOUT}
          echo ${OVERRIDE}
          if [ "${OVERRIDE}" == "" ]
          then
            ../../ecs-helper/ecs-runner -task ${TASK_NAME} -timeout ${TIMEOUT}
          else
            ../../ecs-helper/ecs-runner -task ${TASK_NAME} -timeout ${TIMEOUT} -override ${OVERRIDE}
          fi
        working-directory: terraform/environment
