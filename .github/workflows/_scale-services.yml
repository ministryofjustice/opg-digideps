on:
  workflow_call:
    inputs:
      workspace:
        description: "Workspace"
        required: true
        type: string
      replicas:
        description: "Count of replicas needed"
        required: true
        type: string
      acu:
        description: "Max ACU allowed for serverless v2"
        required: true
        type: string
      account_id:
        description: "Account to use"
        required: true
        type: string
jobs:
  terraform_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v3
        with:
          fetch-depth: "0"

      - name: install aws cli
        uses: unfor19/install-aws-cli-action@46282f151073130d90347412d9c4ef0640177f22 # pin@v1.0.3

      - name: configure OIDC AWS credentials for scaling services
        uses: aws-actions/configure-aws-credentials@12e3392609eaaceb7ae6191b3f54bbcb85b5002b
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.account_id }}:role/digideps-gh-actions-scale-infra"
          role-session-name: github-actions-scale-infra
          role-duration-seconds: 1800
          aws-region: eu-west-1

      - name: scale services
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          REPLICAS: ${{ inputs.replicas }}
          ACU: ${{ inputs.acu }}
        run: |
          aws ecs update-service --service front-${TF_WORKSPACE} --cluster ${TF_WORKSPACE} --desired-count ${REPLICAS}
          aws ecs update-service --service admin-${TF_WORKSPACE} --cluster ${TF_WORKSPACE} --desired-count ${REPLICAS}
          aws ecs update-service --service api-${TF_WORKSPACE} --cluster ${TF_WORKSPACE} --desired-count ${REPLICAS}
          aws rds modify-db-cluster --db-cluster-identifier api-${TF_WORKSPACE} --serverless-v2-scaling-configuration MinCapacity=0.5,MaxCapacity=${ACU}
