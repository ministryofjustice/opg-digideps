on:
  workflow_call:
    secrets:
      ssh_private_key:
        required: true
    inputs:
      terraform_path:
        description: "The name of the terraform path"
        required: true
        type: string
      workspace:
        description: "Terraform workspace"
        required: true
        type: string
      account_name:
        description: "Terraform account name"
        required: true
        type: string
    outputs:
      image_tag:
        description: "The latest version image tag"
        value: ${{ jobs.export_image_tag.outputs.image_tag }}
jobs:
  export_image_tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.export_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@3b9b8c884f6b4bb4d5be2779c26374abadae0871 # pin@v3
        with:
          fetch-depth: "0"

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.1.0
        with:
          terraform_directory: terraform/${{ inputs.terraform_path }}

      - uses: hashicorp/setup-terraform@49dee962d541c13290ae1c9c9be9c8b741ecb6bc # pin@v2.0.0
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - uses: webfactory/ssh-agent@dc588b651fe13675774614f8e6a936a468676387 # pin@v0.5.4
        with:
          ssh-private-key: ${{ secrets.ssh_private_key }}

      - name: configure OIDC AWS credentials for latest deployment
        uses: aws-actions/configure-aws-credentials@97834a484a5ab3c40fa9e2eb40fcf8041105a573
        with:
          role-to-assume: arn:aws:iam::631181914621:role/oidc-digideps-${{ inputs.account_name }}
          role-session-name: github-actions-slack-notifier
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: terraform init
        run: terraform init -input=false
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: export latest image
        id: export_tag
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          export IMAGE_TAG=$(terraform show -json | head -n 2 | tail -n 1 | jq -r '.values.root_module.child_modules[].resources[] | select(.address == "module.eu_west_1[0].aws_ecs_task_definition.front") | .values.container_definitions | fromjson[].image | split(":")[1]' | tail -n 1 2>/dev/null)
          echo "image_tag=$(echo ${IMAGE_TAG})" >> $GITHUB_OUTPUT
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: Unset AWS variables
        if: always()
        run: |
          echo "AWS_SECRET_ACCESS_KEY=" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=" >> $GITHUB_ENV
