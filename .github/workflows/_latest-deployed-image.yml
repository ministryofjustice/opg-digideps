on:
  workflow_call:
    inputs:
      terraform_path:
        description: "The name of the terraform path"
        required: true
        type: string
      workspace:
        description: "Terraform workspace"
        required: true
        type: string
      account_name:
        description: "Terraform account name"
        required: true
        type: string
    outputs:
      image_tag:
        description: "The latest version image tag"
        value: ${{ jobs.export_image_tag.outputs.image_tag }}
jobs:
  export_image_tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.export_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # pin@v3
        with:
          fetch-depth: "0"

      - name: parse terraform version
        id: tf_version_setup
        run: |
          if [ -f ./versions.tf ]; then
            terraform_version=$(cat ./versions.tf | ../../scripts/pipeline/terraform/terraform-version.sh)
            echo "- Terraform version: [${terraform_version}]" >> $GITHUB_STEP_SUMMARY
            echo "TERRAFORM_VERSION=${terraform_version}" >> $GITHUB_OUTPUT
          fi
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: "Terraform version [${{ steps.tf_version_setup.outputs.TERRAFORM_VERSION }}]"
        run: echo "terraform version [${{ steps.tf_version_setup.outputs.TERRAFORM_VERSION }}]"

      - uses: hashicorp/setup-terraform@1b93182764c8332e7679b2393cb307cbe7baf9dc # pin@v2.0.0
        with:
          terraform_version: ${{ steps.tf_version_setup.outputs.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: configure OIDC AWS credentials for latest deployment
        uses: aws-actions/configure-aws-credentials@af7e7d4f5cd9d70c88a15b7a1332764a801f90d2
        with:
          role-to-assume: arn:aws:iam::631181914621:role/oidc-digideps-${{ inputs.account_name }}
          role-session-name: github-actions-slack-notifier
          role-duration-seconds: 900
          aws-region: eu-west-1

      - uses: webfactory/ssh-agent@fd34b8dee206fe74b288a5e61bc95fba2f1911eb # pin@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_ALLOW_LIST_REPOSITORY }}

      - name: terraform init
        run: terraform init -input=false
        working-directory: terraform/${{ inputs.terraform_path }}

      - name: export latest image
        id: export_tag
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          export IMAGE_TAG=$(terraform show -json | head -n 2 | tail -n 1 | jq -r '.values.root_module.child_modules[].resources[] | select(.address == "module.eu_west_1[0].aws_ecs_task_definition.front") | .values.container_definitions | fromjson[].image | split(":")[1]' | tail -n 1 2>/dev/null)
          echo "image_tag=$(echo ${IMAGE_TAG})" >> $GITHUB_OUTPUT
        working-directory: terraform/${{ inputs.terraform_path }}
