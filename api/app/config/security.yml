parameters:
    # set this param to a higher value than session_expire_seconds on the client
    user_provider_timeout_seconds: 3901
    client_permissions:
        admin: [ROLE_AD, ROLE_ADMIN]
        frontend: [ROLE_DEPUTY]

services:
    # authenticator
    AppBundle\Service\Auth\UserProvider:
        arguments: [ '@em', "@snc_redis.default", "@logger", { "timeout_seconds": "%user_provider_timeout_seconds%" }, '@AppBundle\Entity\Repository\UserRepository' ]

    AppBundle\Service\Auth\AuthService:
        public: true
        arguments:
            $encoderFactory: '@security.encoder_factory'
            $logger: '@logger'
            $userRepository: '@AppBundle\Entity\Repository\UserRepository'
            $roleHierarchy: '@security.role_hierarchy'
            $clientPermissions: '%client_permissions%'

    AppBundle\Service\BruteForce\AttemptsInTimeChecker:
        arguments: [ "@snc_redis.default" ]
        calls:
            - [ setRedisPrefix, ["ac_ret_code"] ]
            # after 5 attempts in the last 10 minutes, return a different return code (activate captcha)
            - [ addTrigger, [  5, 600 ] ]
    AppBundle\Service\BruteForce\AttemptsIncrementalWaitingChecker:
        arguments: [ "@snc_redis.default" ]
        public: true
        calls:
            - [ setRedisPrefix, ["ac_exception"] ]
            # after 10 attempts, freeze for 30 minutes
            - [ addFreezingRule, [  10, 1800 ] ]
            # after further 10 attempts. freeze for 1h
            - [ addFreezingRule, [  20, 3600 ] ]
            # after further 10 attempts. freeze for 2h
            - [ addFreezingRule, [  30, 7200 ] ]


security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        AppBundle\Entity\User: sha512

    providers:
        user_provider_redis:
            id: AppBundle\Service\Auth\UserProvider

    firewalls:
        elb:
            pattern: ^/manage/
            security: false
            methods: [GET]
        feedbackHomepage:
            pattern: ^/feedback/homepage
            security: false
            methods: [POST]
        login:
            pattern:  ^/auth/login$
            security: false
            methods: [POST]
        userRecreateToken:
            pattern: ^/user/recreate-token
            security: false
            methods: [PUT]
        userAgreeTermsUse:
            pattern: ^/user/agree-terms-use
            security: false
            methods: [PUT]
        userGetByToken:
            pattern: ^/user/get-by-token
            security: false
            methods: [GET]
        selfregister:
            pattern: ^/selfregister
            security: false
            methods: [POST]
        queuedDocuments:
           pattern: ^/document/queued
           security: false
           methods: [GET]
        updateDocument:
            pattern: ^/document/\d+
            security: false
            methods: [PUT]
        updateRelatedDocumentsStatuses:
            pattern: ^/document/update-related-statuses
            security: false
            methods: [PUT]
        queuedChecklists:
            pattern: ^/checklist/queued
            security: false
            methods: [GET]
        updateReportSubmissionUuid:
            pattern: ^/report-submission/\d+/update-uuid
            security: false
            methods: [PUT]
        reportSubmissionGetOld:
           pattern: ^/report-submission/old
           security: false
           #methods: [GET]
        reportSubmissionSetUndownloadable:
           pattern: ^/report-submission/\d+/set-undownloadable
           security: false
           #methods: [PUT]
        satisfaction:
           pattern: ^/satisfaction/public
           security: false
           methods: [POST]
        settingServiceNotification:
           pattern: ^/setting/service-notification
           security: false
           methods: [GET]
        # keep this one last so that the previous ones bypass the catch-all pattern below
        default:
            pattern: .*
            security: true
            simple_preauth:
                authenticator: AppBundle\Service\Auth\HeaderTokenAuthenticator
            provider: user_provider_redis
            stateless:   true

    # https://opgtransform.atlassian.net/wiki/spaces/DEPDS/pages/191299647/User+roles
    role_hierarchy:
        ROLE_SUPER_ADMIN:     [ ROLE_ADMIN ]

        ROLE_LAY_DEPUTY:      ROLE_DEPUTY
        ROLE_ORG:             ROLE_DEPUTY

        ROLE_PA:              ROLE_ORG
        ROLE_PROF:            ROLE_ORG

        ROLE_PA_NAMED:        [ ROLE_PA, ROLE_ORG_NAMED ]
        ROLE_PA_ADMIN:        [ ROLE_PA, ROLE_ORG_ADMIN ]
        ROLE_PA_TEAM_MEMBER:  [ ROLE_PA, ROLE_ORG_TEAM_MEMBER ]

        ROLE_PROF_NAMED:        [ ROLE_PROF, ROLE_ORG_NAMED ]
        ROLE_PROF_ADMIN:        [ ROLE_PROF, ROLE_ORG_ADMIN ]
        ROLE_PROF_TEAM_MEMBER:  [ ROLE_PROF, ROLE_ORG_TEAM_MEMBER ]
