<?php

namespace Tests\AppBundle\Entity;

use AppBundle\Entity\Client;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-12 at 12:29:35.
 */
class ClientTest extends TestCase
{
    /**
     * @var Client
     */
    protected $object;

    protected function setUp(): void
    {
        $this->object = new Client();
    }

    public function testGetFullName()
    {
        $this->object->setFirstname('first name');
        $this->object->setLastname('last');

        $this->assertEquals('first name&nbsp;last', $this->object->getFullName('&nbsp;'));
    }

    public function testSetterGetters()
    {
        $this->assertEquals('123456', $this->object->setAddress('123456')->getAddress());
        $this->assertEquals('123456@mail.com', $this->object->setEmail('123456@mail.com')->getEmail());
        $this->assertEquals('123456', $this->object->setPhone('123456')->getPhone());
        $this->assertEquals('n4', $this->object->setPostcode('n4')->getPostcode());
    }


    /**
     * Data provider, expected reporting start date from a given court date
     */
    public function courtDateExpectedStartDateProvider()
    {
        return [
            [new \DateTime('2000-01-01'), 2019, new \DateTime('2018-01-01')],
            [new \DateTime('2000-12-31'), 2019, new \DateTime('2018-12-31')],
            [new \DateTime('2003-09-30'), 2019, new \DateTime('2018-09-30')],
            [new \DateTime('2015-03-31'), 2019, new \DateTime('2018-03-31')],
            [new \DateTime('2016-02-29'), 2019, new \DateTime('2018-03-01')],
            [new \DateTime('2012-02-29'), 2017, new \DateTime('2016-02-29')],
            [new \DateTime('2017-03-01'), 2019, new \DateTime('2018-03-01')],
            [new \DateTime('2018-08-15'), 2019, new \DateTime('2018-08-15')],
            [new \DateTime('2018-08-16'), 2019, new \DateTime('2018-08-16')],
            [new \DateTime('2019-08-16'), 2019, new \DateTime('2019-08-16')],
            [new \DateTime('2016-02-29'), 2020, new \DateTime('2019-03-01')],
            [new \DateTime('2020-02-29'), 2020, new \DateTime('2020-02-29')],
            [new \DateTime('2020-02-29'), 2021, new \DateTime('2020-02-29')],
            [new \DateTime('2020-02-29'), 2022, new \DateTime('2021-03-01')]
        ];
    }

    /**
     * Data provider, expected reporting end date from a given court date
     */
    public function courtDateExpectedEndDateProvider()
    {
        return [
            [new \DateTime('2000-01-01'), 2019, new \DateTime('2018-12-31')],
            [new \DateTime('2000-12-31'), 2019, new \DateTime('2019-12-30')],
            [new \DateTime('2003-09-30'), 2019, new \DateTime('2019-09-29')],
            [new \DateTime('2015-03-31'), 2019, new \DateTime('2019-03-30')],
            [new \DateTime('2016-02-29'), 2019, new \DateTime('2019-02-28')],
            [new \DateTime('2017-03-01'), 2019, new \DateTime('2019-02-28')],
            [new \DateTime('1999-03-01'), 2016, new \DateTime('2016-02-29')],
            [new \DateTime('2018-08-15'), 2019, new \DateTime('2019-08-14')],
            [new \DateTime('2018-08-16'), 2019, new \DateTime('2019-08-15')],
            [new \DateTime('2017-08-17'), 2019, new \DateTime('2019-08-16')],
        ];
    }

    /**
     * @dataProvider courtDateExpectedStartDateProvider
     */
    public function testGetExpectedStartDate($courtDate, $year, $expected)
    {
        $this->object->setCourtDate($courtDate);
        $this->assertEquals(
            $expected->format('d/m/Y'),
            $this->object->getExpectedReportStartDate($year)->format('d/m/Y')
        );
    }

    public function testGetExpectedStartDate_null_court_date()
    {
        $this->object->setCourtDate(null);
        $this->assertEquals(null, $this->object->getExpectedReportStartDate(2020));
    }

    /**
     * @dataProvider courtDateExpectedEndDateProvider
     */
    public function testGetExpectedEndDate($courtDate, $year, $expected)
    {
        $this->object->setCourtDate($courtDate);
        $this->assertEquals(
            $expected->format('d/m/Y'),
            $this->object->getExpectedReportEndDate($year)->format('d/m/Y')
        );
    }

    public function testGetExpectedEndDate_null_court_date()
    {
        $this->object->setCourtDate(null);
        $this->assertEquals(null, $this->object->getExpectedReportEndDate(2020));
    }
}
